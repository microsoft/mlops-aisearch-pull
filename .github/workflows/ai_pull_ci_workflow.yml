---
name: CI Workflow for AI Search Components

on:
  workflow_dispatch:
  workflow_call:
  push:
    branches:
      - 'development'

jobs:
  build-validation:
    name: Build Validation
    uses: ./.github/workflows/build_validation_workflow.yml
  deploy-azure-functions:
    name: Azure Functions Deployment
    runs-on: ubuntu-latest
    needs: build-validation
    steps:
      - name: Checkout Actions
        uses: actions/checkout@v1
      - name: Export Secrets
        uses: oNaiPs/secrets-to-env-action@v1
        with:
          secrets: ${{ toJSON(secrets) }}
          convert: upper
      - name: Configure Job Agent
        uses: ./.github/actions/configure_job_agent

      - name: Execute Azure Functions Deployment
        uses: ./.github/actions/execute_shell_code
        env:
            BUILD_SOURCEBRANCHNAME: ${{ github.head_ref || github.ref_name }}
        with:
            azure_credentials: ${{ secrets.azure_credentials }}
            script_parameter: |
                python -u -m mlops.deployment_scripts.deploy_azure_functions --ignore_slot

      - name: Validate Azure Functions Deployment
        uses: ./.github/actions/execute_shell_code
        env:
            BUILD_SOURCEBRANCHNAME: ${{ github.head_ref || github.ref_name }}
        with:
            azure_credentials: ${{ secrets.azure_credentials }}
            script_parameter: |
                python -u -m mlops.deployment_scripts.run_functions --ignore_slot

      - name: Deploy Indexer
        uses: ./.github/actions/execute_shell_code
        env:
            BUILD_SOURCEBRANCHNAME: ${{ github.head_ref || github.ref_name }}
        with:
            azure_credentials: ${{ secrets.azure_credentials }}
            script_parameter: |
                python -u -m mlops.deployment_scripts.build_indexer --ignore_slot

      - name: Get merged branch name
        run: |
          # Get the last merge commit
          MERGE_COMMIT=$(git log -1 --merges --format='%H')

          # Get the branch name that was merged into development
          MERGED_BRANCH=$(git show -s --pretty=%P $MERGE_COMMIT | cut -d ' ' -f 2 | xargs git branch --contains | grep -v 'development$' | tr -d ' *')

          # Print the merged branch name
          echo "Merged branch: $MERGED_BRANCH"
          echo "MERGED_BRANCH=$MERGED_BRANCH" >> $GITHUB_ENV

      - name: Cleanup PR Brnach
        uses: ./.github/actions/execute_shell_code
        env:
            BUILD_SOURCEBRANCHNAME: $MERGED_BRANCH
        with:
            azure_credentials: ${{ secrets.azure_credentials }}
            script_parameter: |
                python -u -m mlops.deployment_scripts.cleanup_pr
